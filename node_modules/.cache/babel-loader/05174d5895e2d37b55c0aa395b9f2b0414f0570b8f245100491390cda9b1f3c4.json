{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/repos/movie-search-v2/movie-search-cra/src/Context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nfunction ContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [userSearch, setUserSearch] = useState(\"\");\n  const [searchSubmit, setSearchSubmit] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  const [watchlist, setWatchlist] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=bc1d2f76e11a46c1cc9ef0ee7ce8670a&query=${userSearch}`).then(res => res.json()).then(data => setMovieData(data.results));\n  }, [userSearch]);\n  function handleChange(e) {\n    setSearchSubmit(false);\n    setUserSearch(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchSubmit(true);\n  }\n  function addToWatchlist(id) {\n    const updatedMovieArray = movieData.map(film => {\n      if (film.id === id) {\n        if (film.addedToWatchlist) {\n          return {\n            ...film,\n            addedToWatchlist: !film.addedToWatchlist\n          };\n        } else {\n          return {\n            ...film,\n            addedToWatchlist: true\n          };\n        }\n      }\n      return film;\n    });\n    setMovieData(updatedMovieArray);\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      userSearch,\n      searchSubmit,\n      movieData,\n      watchlist,\n      handleChange,\n      handleSubmit,\n      addToWatchlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(ContextProvider, \"8jl18Eg28M2R+Z9wWIipHOtfa/k=\");\n_c = ContextProvider;\nexport { ContextProvider, Context };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","userSearch","setUserSearch","searchSubmit","setSearchSubmit","movieData","setMovieData","watchlist","setWatchlist","fetch","then","res","json","data","results","handleChange","e","target","value","handleSubmit","preventDefault","addToWatchlist","id","updatedMovieArray","map","film","addedToWatchlist"],"sources":["/Users/anthony/repos/movie-search-v2/movie-search-cra/src/Context.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    const [userSearch, setUserSearch] = useState(\"\")\n    const [searchSubmit, setSearchSubmit] = useState(false)\n    const [movieData, setMovieData] = useState([])\n    const [watchlist, setWatchlist] = useState([])\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=bc1d2f76e11a46c1cc9ef0ee7ce8670a&query=${userSearch}`)\n        .then(res => res.json())\n        .then(data => setMovieData(data.results))\n    }, [userSearch])\n\n    function handleChange(e) {\n        setSearchSubmit(false)\n        setUserSearch(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        setSearchSubmit(true)\n    }\n\n    function addToWatchlist(id) {\n        const updatedMovieArray = movieData.map(film => {\n            if (film.id === id) {\n                if(film.addedToWatchlist) {\n                    return {...film, addedToWatchlist: !film.addedToWatchlist}\n                }else {\n                    return {...film, addedToWatchlist: true}\n                }\n            }\n            return film\n        })\n        setMovieData(updatedMovieArray)\n    }\n\n    return (\n        <Context.Provider value={{\n            userSearch,\n            searchSubmit,\n            movieData,\n            watchlist,\n            handleChange,\n            handleSubmit,\n            addToWatchlist\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA;AAEhD,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAa,EAAE;AAErC,SAASC,eAAe,OAAa;EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZa,KAAK,CAAE,4FAA2FR,UAAW,EAAC,CAAC,CAC9GS,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIP,YAAY,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,SAASc,YAAY,CAACC,CAAC,EAAE;IACrBZ,eAAe,CAAC,KAAK,CAAC;IACtBF,aAAa,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;EAEA,SAASC,YAAY,CAACH,CAAC,EAAE;IACrBA,CAAC,CAACI,cAAc,EAAE;IAClBhB,eAAe,CAAC,IAAI,CAAC;EACzB;EAEA,SAASiB,cAAc,CAACC,EAAE,EAAE;IACxB,MAAMC,iBAAiB,GAAGlB,SAAS,CAACmB,GAAG,CAACC,IAAI,IAAI;MAC5C,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;QAChB,IAAGG,IAAI,CAACC,gBAAgB,EAAE;UACtB,OAAO;YAAC,GAAGD,IAAI;YAAEC,gBAAgB,EAAE,CAACD,IAAI,CAACC;UAAgB,CAAC;QAC9D,CAAC,MAAK;UACF,OAAO;YAAC,GAAGD,IAAI;YAAEC,gBAAgB,EAAE;UAAI,CAAC;QAC5C;MACJ;MACA,OAAOD,IAAI;IACf,CAAC,CAAC;IACFnB,YAAY,CAACiB,iBAAiB,CAAC;EACnC;EAEA,oBACI,QAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAE;MACrBtB,UAAU;MACVE,YAAY;MACZE,SAAS;MACTE,SAAS;MACTQ,YAAY;MACZI,YAAY;MACZE;IACJ,CAAE;IAAA,UACGrB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B;AAAC,GAjDQD,eAAe;AAAA,KAAfA,eAAe;AAmDxB,SAAQA,eAAe,EAAEF,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}