{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/repos/movie-search-v2/movie-search-cra/src/Context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport starIcon from \"./images/star-icon.png\";\nimport addIcon from \"./images/add-icon.png\";\nimport greenCheck from \"./images/green-icon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\nfunction ContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [userSearch, setUserSearch] = useState(\"\");\n  const [searchSubmit, setSearchSubmit] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  const [watchlist, setWatchlist] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=bc1d2f76e11a46c1cc9ef0ee7ce8670a&query=${userSearch}`).then(res => res.json()).then(data => setMovieData(data.results));\n  }, [userSearch]);\n  function handleChange(e) {\n    setSearchSubmit(false);\n    setUserSearch(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchSubmit(true);\n  }\n  function addToWatchlist(id) {\n    const updatedMovieArray = movieData.map(film => {\n      if (film.id === id) {\n        if (film.addedToWatchlist) {\n          return {\n            ...film,\n            addedToWatchlist: !film.addedToWatchlist\n          };\n        } else {\n          return {\n            ...film,\n            addedToWatchlist: true\n          };\n        }\n      }\n      return film;\n    });\n    setMovieData(updatedMovieArray);\n  }\n  function renderFilms() {\n    return movieData.map(film => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w300${film.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: film.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: starIcon,\n                alt: \"star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 32\n              }, this), film.vote_average]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"release-addWatchlist\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Release Date: \", film.release_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addToWatchlist(film.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: film.addedToWatchlist ? greenCheck : addIcon,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 75\n              }, this), \"Watchlist\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: film.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      userSearch,\n      searchSubmit,\n      movieData,\n      watchlist,\n      handleChange,\n      handleSubmit,\n      renderFilms,\n      addToWatchlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(ContextProvider, \"8jl18Eg28M2R+Z9wWIipHOtfa/k=\");\n_c = ContextProvider;\nexport { ContextProvider, Context };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","starIcon","addIcon","greenCheck","Context","createContext","ContextProvider","children","userSearch","setUserSearch","searchSubmit","setSearchSubmit","movieData","setMovieData","watchlist","setWatchlist","fetch","then","res","json","data","results","handleChange","e","target","value","handleSubmit","preventDefault","addToWatchlist","id","updatedMovieArray","map","film","addedToWatchlist","renderFilms","poster_path","original_title","vote_average","release_date","overview"],"sources":["/Users/anthony/repos/movie-search-v2/movie-search-cra/src/Context.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nimport starIcon from \"./images/star-icon.png\"\nimport addIcon from \"./images/add-icon.png\"\nimport greenCheck from \"./images/green-icon.png\"\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    const [userSearch, setUserSearch] = useState(\"\")\n    const [searchSubmit, setSearchSubmit] = useState(false)\n    const [movieData, setMovieData] = useState([])\n    const [watchlist, setWatchlist] = useState([])\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=bc1d2f76e11a46c1cc9ef0ee7ce8670a&query=${userSearch}`)\n        .then(res => res.json())\n        .then(data => setMovieData(data.results))\n    }, [userSearch])\n\n    function handleChange(e) {\n        setSearchSubmit(false)\n        setUserSearch(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        setSearchSubmit(true)\n    }\n\n    function addToWatchlist(id) {\n        const updatedMovieArray = movieData.map(film => {\n            if (film.id === id) {\n                if(film.addedToWatchlist) {\n                    return {...film, addedToWatchlist: !film.addedToWatchlist}\n                }else {\n                    return {...film, addedToWatchlist: true}\n                }\n            }\n            return film\n        })\n        setMovieData(updatedMovieArray)\n    }\n\n    function renderFilms() {\n        return movieData.map(film => {\n            return (\n                <div className=\"movie-item\">\n\n                    <img src={`https://image.tmdb.org/t/p/w300${film.poster_path}`} alt = \"movie poster\"/>\n\n                    <div className=\"movie-details\">\n                        <div className=\"title-rating\">\n                            <h3>{film.original_title}</h3>\n                            <p><img src={starIcon} alt=\"star\"/>{film.vote_average}</p>\n                        </div>\n\n                        <div className=\"release-addWatchlist\">\n                            <p>Release Date: {film.release_date}</p>\n                            <button onClick={()=>addToWatchlist(film.id)}><img src={film.addedToWatchlist ? greenCheck : addIcon} alt=\"\"/>Watchlist</button>\n                        </div>\n                        \n                        <p>{film.overview}</p>\n                    </div>\n\n                </div>\n                \n            )\n        })\n    }\n\n    return (\n        <Context.Provider value={{\n            userSearch,\n            searchSubmit,\n            movieData,\n            watchlist,\n            handleChange,\n            handleSubmit,\n            renderFilms,\n            addToWatchlist\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {ContextProvider, Context}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}